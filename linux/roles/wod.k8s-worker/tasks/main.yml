- name: Run prepare.sh
  environment:
    REGISTRY_LOCAL: '{{ REGISTRY_LOCAL }}'
    REGISTRY_KUBELET_REPO: '{{ K8S_IMAGES["KUBELET"]["NAME"] }}'
    REGISTRY_KUBELET_VERSION: '{{ K8S_IMAGES["KUBELET"]["VERSION"] }}' 
  script: scripts/prepare.sh

- name: template config/kubelet.yaml
  template: src=config/kubelet.yaml dest=/etc/kubernetes/config/kubelet.yaml

- name: template config/kubelet.conf.yaml
  template: src=config/kubelet.conf.yaml dest=/etc/kubernetes/config/kubelet.conf.yaml

- name: template config/kubelet-master.yaml
  template: src=config/kubelet-master.yaml dest=/etc/kubernetes/config/kubelet.yaml  
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"  
  
- name: check need services/k8s-kubelet.service
  raw: stat /etc/systemd/system/k8s-kubelet.service
  register: need_services_kubelet
  ignore_errors: True

- name: template services/k8s-kubelet.service
  template: src=services/kubelet.service dest=/etc/systemd/system/k8s-kubelet.service

- name: start services k8s-kubelet.service
  raw: systemctl daemon-reload && systemctl enable k8s-kubelet.service && systemctl start k8s-kubelet.service
  when: need_services_kubelet is failed