- name: mkdir /etc/kubernetes/ssl
  raw: mkdir -p /etc/kubernetes/ssl

- name: check need ca.pem
  raw: stat /etc/kubernetes/ssl/ca.pem
  register: need_ssl_ca_pem
  ignore_errors: True  

- name: copy ca.pem
  copy: src=ca.pem dest=/etc/kubernetes/ssl/ca.pem mode=0644
  when: need_ssl_ca_pem is failed
  
- name: check need ca.crt
  raw: stat /etc/kubernetes/ssl/ca.crt
  register: need_ssl_ca_crt
  ignore_errors: True  

- name: copy ca.crt
  copy: src=ca.crt dest=/etc/kubernetes/ssl/ca.crt mode=0644
  when: need_ssl_ca_crt is failed

- name: check need ca.key
  raw: stat /etc/kubernetes/ssl/ca.key
  register: need_ssl_ca_key
  ignore_errors: True  

- name: copy ca.key
  copy: src=ca.key dest=/etc/kubernetes/ssl/ca.key mode=0644
  when: need_ssl_ca_key is failed

# master
- name: check need apiserver.key
  raw: stat /etc/kubernetes/ssl/apiserver.key
  register: need_ssl_apiserver_key
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  ignore_errors: True  

- name: copy apiserver.key
  copy: src=apiserver.key dest=/etc/kubernetes/ssl/apiserver.key mode=0755
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  - need_ssl_apiserver_key is failed

- name: check need admin.key
  raw: stat /etc/kubernetes/ssl/admin.key
  register: need_ssl_admin_key
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  ignore_errors: True  

- name: copy admin.key
  copy: src=admin.key dest=/etc/kubernetes/ssl/admin.key mode=0755
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  - need_ssl_admin_key is failed  
  
- name: template gencert.sh
  template: src=gencert.sh dest=/etc/kubernetes/ssl/{{ K8S_DOMAIN }}/gencert.sh 
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  
- name: template gensecret.sh
  template: src=gensecret.sh dest=/etc/kubernetes/ssl/{{ K8S_DOMAIN }}/gensecret.sh 
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  
- name: template {{ K8S_DOMAIN }}.cnf
  template: src=demo.cnf dest=/etc/kubernetes/ssl/{{ K8S_DOMAIN }}/{{ K8S_DOMAIN }}.cnf
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  
- name: exec gencert.sh
  shell: cd /etc/kubernetes/ssl/{{ K8S_DOMAIN }} && sh gencert.sh
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  
- name: exec gensecret.sh
  shell: cd /etc/kubernetes/ssl/{{ K8S_DOMAIN }} && sh gensecret.sh
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"  

- name: check need master-ssl.sh
  raw: stat /etc/kubernetes/ssl/master-ssl.sh
  register: need_ssl_master_sh
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  ignore_errors: True  

- name: copy master-ssl.sh
  copy: src=master-ssl.sh dest=/etc/kubernetes/ssl/master-ssl.sh mode=0755
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  - need_ssl_master_sh is failed

- name: template master-apiserver.cnf
  template: src=master-apiserver.cnf dest=/etc/kubernetes/ssl/master-apiserver.cnf 
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  - need_ssl_master_sh is failed

- name: template master-admin.cnf
  template: src=master-admin.cnf dest=/etc/kubernetes/ssl/master-admin.cnf 
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  - need_ssl_master_sh is failed

- name: Run master-ssl.sh
  script: master-ssl.sh
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is defined and K8S_CLUSTER_ROLE[inventory_hostname] == "master"
  - need_ssl_master_sh is failed

# worker
- name: check need worker-ssl.sh
  raw: stat /etc/kubernetes/ssl/worker-ssl.sh
  register: need_ssl_worker_sh
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is not defined or K8S_CLUSTER_ROLE[inventory_hostname] != "master"
  ignore_errors: True  

- name: copy worker-ssl.sh
  copy: src=worker-ssl.sh dest=/etc/kubernetes/ssl/worker-ssl.sh mode=0755
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is not defined or K8S_CLUSTER_ROLE[inventory_hostname] != "master" 
  - need_ssl_worker_sh is failed

- name: template worker-kubelet.cnf
  template: src=worker-kubelet.cnf dest=/etc/kubernetes/ssl/worker-kubelet.cnf 
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is not defined or K8S_CLUSTER_ROLE[inventory_hostname] != "master" 
  - need_ssl_worker_sh is failed

- name: template worker-kubeproxy.cnf
  template: src=worker-kubeproxy.cnf dest=/etc/kubernetes/ssl/worker-kubeproxy.cnf 
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is not defined or K8S_CLUSTER_ROLE[inventory_hostname] != "master" 
  - need_ssl_worker_sh is failed
  
- name: Run worker-ssl.sh
  script: worker-ssl.sh
  when: 
  - K8S_CLUSTER_ROLE[inventory_hostname] is not defined or K8S_CLUSTER_ROLE[inventory_hostname] != "master" 
  - need_ssl_worker_sh is failed