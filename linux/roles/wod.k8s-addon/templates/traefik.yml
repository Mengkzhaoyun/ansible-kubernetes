---  
kind: ConfigMap
apiVersion: v1
metadata:
  name: traefik
  namespace: kube-system
data:
  traefik.toml: |
    defaultEntryPoints = ["http","https"]
    [kubernetes]
    [entryPoints.traefik]
      address = ":8380"
    [websocket]
      protocol = "http"
    [entryPoints]
      [entryPoints.http]
      address = ":80"
      [entryPoints.https]
      address = ":443"
        [entryPoints.https.tls]
          [[entryPoints.https.tls.certificates]]
          CertFile = "/ssl/{{ K8S_DOMAIN }}.crt"
          KeyFile = "/ssl/{{ K8S_DOMAIN }}.key"
    [metrics]
      [metrics.prometheus]
        entryPoint = "traefik"
        buckets = [0.1,0.3,1.2,5.0]
    [accessLog]
      format   = "json"
    [api]
      entryPoint = "traefik"
      dashboard = true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
- kind: ServiceAccount
  name: traefik
  namespace: kube-system
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: traefik
#   namespace: kube-system
# spec:
#   type: NodePort
#   ports:
#     - name: http
#       port: 80
#       nodePort: 80
#     - name: https
#       port: 443
#       nodePort: 443       
#   selector:
#     k8s-app: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web
  namespace: kube-system
spec:
  ports:
    - name: http-web
      port: 8380   
  selector:
    k8s-app: traefik
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: kube-system
  labels:
    k8s-app: traefik
spec:
  replicas: "{{ K8S_TRAEFIK_REPLICAS }}"
  selector:
    matchLabels:
      k8s-app: traefik
  template:
    metadata:
      labels:
        k8s-app: traefik
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''        
    spec:
      hostNetwork:Â true
      serviceAccountName: traefik
      tolerations:
        - effect: NoSchedule
          operator: "Exists"      
      terminationGracePeriodSeconds: 60
      nodeSelector:
        node-role.kubernetes.io/master: "true"      
      volumes:
      - name: ssl
        secret:
          secretName: traefik-cert
      - name: config
        configMap:
          name: traefik
      - name: etc-localtime
        hostPath:
          path: /etc/localtime
      containers:
      - image: "{{ REGISTRY_LOCAL }}{{ K8S_IMAGES["TRAEFIK"]["NAME"] }}:{{ K8S_IMAGES["TRAEFIK"]["VERSION"] }}"
        name: traefik
        volumeMounts:
        - name: ssl
          mountPath: /ssl
        - name: config
          mountPath: /config
        - name: etc-localtime
          mountPath: /etc/localtime
        ports:
        - containerPort: 443
          name: https
        - containerPort: 80
          name: http
        - containerPort: 8380
          name: http-web
        args:
        - --configfile=/config/traefik.toml
        - --insecureSkipVerify=true
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik
  namespace: kube-system
spec:
  rules:
  - host: {{ K8S_DOMAIN_ADDONS["TRAEFIK"] }}
    http:
      paths:
      - path: /
        backend:
          serviceName: traefik-web
          servicePort: 8380