---
- name: Run prepare.sh
  environment:
    HTTP_SERVER: '{{ HTTP_SERVER }}'
    RKT_ACI_REGISTRY: '{{ RKT_ACI_REGISTRY }}'
    RKT_ACI_REGISTRY_DATA: '{{ RKT_ACI_REGISTRY_DATA }}'
    REGISTRY_REMOTE: '{{ REGISTRY_REMOTE }}'
    REGISTRY_REPO_REGISTRY: '{{ K8S_IMAGES["REGISTRY"]["NAME"] }}'
    REGISTRY_VERSION_REGISTRY: '{{ K8S_IMAGES["REGISTRY"]["VERSION"] }}'
    REGISTRY_DATA_PATH: '{{ REGISTRY_DATA_PATH }}'
  script: prepare.sh

- name: check need prepare.sh
  raw: stat /etc/kubernetes/scripts/registry-prepare.sh
  register: need_scripts_prepare
  ignore_errors: True

- name: copy prepare.sh
  copy: src=prepare.sh dest=/etc/kubernetes/scripts/registry-prepare.sh mode=0755
  when: need_scripts_prepare is failed  

- name: check need k8s-registry.service
  raw: stat /etc/systemd/system/k8s-registry.service
  register: need_services_registry
  ignore_errors: True  
  when: REGISTRY_LOCAL_HOSTNAME == inventory_hostname

- name: template k8s-registry.service
  template: src=k8s-registry.service dest=/etc/systemd/system/k8s-registry.service mode=0644

- name: start k8s-registry.service
  raw: systemctl daemon-reload && systemctl enable k8s-registry.service && systemctl start k8s-registry.service
  when: need_services_registry is failed